# This is a TOML config file.
# For more information, see https://github.com/toml-lang/toml

##### main base config options #####

# TCP or UNIX socket address of the ABCI application,
# or the name of an ABCI application compiled in with the Tendermint binary
proxy_app = "tcp://127.0.0.1:46658"

# A custom human readable name for this node
moniker = "rpi48"

# If this node is many blocks behind the tip of the chain, FastSync
# allows them to catchup quickly by downloading blocks in parallel
# and verifying their commits
fast_sync = true

# Database backend: leveldb | memdb
db_backend = "leveldb"

# Database directory
db_path = "data"

# Output level for logging, including package level options
log_level = "main:info,state:info,*:error"

##### additional base config options #####

chain_id="test-chain-GwUwsc"

# Path to the JSON file containing the initial validator set and other meta data
genesis_file = "config/genesis.json"

# Path to the JSON file containing the private key to use as a validator in the consensus protocol
priv_validator_file = "config/priv_validator.json"

# Path to the JSON file containing the private key to use for node authentication in the p2p protocol
node_key_file = "config/node_key.json"

# Mechanism to connect to the ABCI application: socket | grpc
abci = "socket"

# TCP or UNIX socket address for the profiling server to listen on
prof_laddr = ""

# If true, query the ABCI app on connecting to a new peer
# so the app can decide if we should keep the connection or not
filter_peers = false

##### advanced configuration options #####

##### rpc server configuration options #####
[rpc]

# TCP or UNIX socket address for the RPC server to listen on
laddr = "tcp://0.0.0.0:46657"

# TCP or UNIX socket address for the gRPC server to listen on
# NOTE: This server only supports /broadcast_tx_commit
grpc_laddr = ""

# Activate unsafe RPC commands like /dial_seeds and /unsafe_flush_mempool
unsafe = false

##### peer to peer configuration options #####
[p2p]

# Address to listen for incoming connections
laddr = "tcp://0.0.0.0:46656"

# Comma separated list of seed nodes to connect to
seeds = ""

# Comma separated list of nodes to keep persistent connections to
# Do not add private peers to this list if you don't want them advertised
# persistent_peers for 20 nodes (33-52)
persistent_peers = """fd208d4af60c673d5a6eb5491952de11f6eee66b@192.168.1.133:46656, \
                    ff5e56c60cfdfd91114c34917ea55c7687589011@192.168.1.134:46656, \
                    1a9b562afdc45dc8795a5f7edc9d4bd496c5f8f6@192.168.1.135:46656, \
                    a105678e3cbec9e29bc4b0c85ccb15593ae61073@192.168.1.136:46656, \
                    88b1f3ba2e4e710767521639c86b184796620edf@192.168.1.137:46656, \
                    4269da36a473ac45fc9e98fbf53a2408e066cbb0@192.168.1.138:46656, \
                    258a1b5f5d80bf4d816fc6179ef56d8d4767baf2@192.168.1.139:46656, \
                    f844f28c007272f0fa148c75a5f0ecadb9570bc2@192.168.1.140:46656, \
                    2d0454745c6c70a67c08247380ed9e9d41929c34@192.168.1.141:46656, \
                    f80653d866780ef1f7e5ce12a9d3665b4f5f157e@192.168.1.142:46656, \
                    a1752b08247b0be20a06e78caa8519f2a7f4db08@192.168.1.143:46656, \
                    b4698145fbd6fc1311a53faa34e12db07e2f8cc5@192.168.1.144:46656, \
                    9c49e160f1a5b9c348b8d7e9c5882c083f685b5c@192.168.1.145:46656, \
                    46660a5de8571c0122a9716743ab6d6516cf9ea6@192.168.1.146:46656, \
                    3b212983e2f4896414ccc5bf26df439d4864458c@192.168.1.147:46656, \
                    1f25095a9631c4300053f7569d0602325954322d@192.168.1.148:46656, \
                    0f2a6025cb52406c11d90ac035ed4dc35e9ee0b3@192.168.1.149:46656, \
                    106e03e8d56def589da15b9a2f060213ff58a7e2@192.168.1.150:46656, \
                    12649417ffe04640242c3fceaf6ecb69085345dc@192.168.1.151:46656, \
                    7a15b147ed826c1f152b52a74210a31379efb57c@192.168.1.152:46656"""


# Path to address book
addr_book_file = "config/addrbook.json"

# Set true for strict address routability rules
addr_book_strict = true

# Time to wait before flushing messages out on the connection, in ms
flush_throttle_timeout = 100

# Maximum number of peers to connect to
max_num_peers = 50

# Maximum size of a message packet payload, in bytes
max_packet_msg_payload_size = 1024

# Rate at which packets can be sent, in bytes/second
send_rate = 512000

# Rate at which packets can be received, in bytes/second
recv_rate = 512000

# Set true to enable the peer-exchange reactor
pex = false

# Seed mode, in which node constantly crawls the network and looks for
# peers. If another node asks it for addresses, it responds and disconnects.
#
# Does not work if the peer-exchange reactor is disabled.
seed_mode = false

# Authenticated encryption
auth_enc = true

# Comma separated list of peer IDs to keep private (will not be gossiped to other peers)
private_peer_ids = ""

##### mempool configuration options #####
[mempool]

recheck = true
recheck_empty = true
broadcast = true
wal_dir = "data/mempool.wal"

# size of the mempool
size = 100000

# size of the cache (used to filter transactions we saw earlier)
cache_size = 100000

##### consensus configuration options #####
[consensus]

wal_file = "data/cs.wal/wal"

# All timeouts are in milliseconds
timeout_propose = 3000
timeout_propose_delta = 500
timeout_prevote = 1000
timeout_prevote_delta = 500
timeout_precommit = 1000
timeout_precommit_delta = 500
timeout_commit = 1000

# Make progress as soon as we have all the precommits (as if TimeoutCommit = 0)
skip_timeout_commit = false

# BlockSize
max_block_size_txs = 10000
max_block_size_bytes = 1

# EmptyBlocks mode and possible interval between empty blocks in seconds
create_empty_blocks = false
create_empty_blocks_interval = 60

# Reactor sleep duration parameters are in milliseconds
peer_gossip_sleep_duration = 100
peer_query_maj23_sleep_duration = 2000

##### transactions indexer configuration options #####
[tx_index]

# What indexer to use for transactions
#
# Options:
#   1) "null" (default)
#   2) "kv" - the simplest possible indexer, backed by key-value storage (defaults to levelDB; see DBBackend).
indexer = "kv"

# Comma-separated list of tags to index (by default the only tag is tx hash)
#
# It's recommended to index only a subset of tags due to possible memory
# bloat. This is, of course, depends on the indexer's DB and the volume of
# transactions.
index_tags = ""

# When set to true, tells indexer to index all tags. Note this may be not
# desirable (see the comment above). IndexTags has a precedence over
# IndexAllTags (i.e. when given both, IndexTags will be indexed).
index_all_tags = false
